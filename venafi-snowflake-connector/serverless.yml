# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"




service: venafi-snowflake-connector
plugins:
  - serverless-snowflake-external-function-plugin

#  Every function that should be available as external function in snowflake needs
#  at least argument_signature and data_type information
functions:
  getCert:
    handler: bin/handlers/getcert
    package:
      include:
        - bin/handlers/getcert
    events:
      - http:
          path: getcert
          method: post
          authorizer: aws_iam
    snowflake:
      argument_signature: (tpp_url varchar, request_id varchar)
      data_type: variant
  listCerts:
    handler: bin/handlers/listcert
    package:
      include:
        - ./bin/handlers/listcert
    events:
      - http:
          path: listcert
          method: post
          authorizer: aws_iam
    snowflake:
          argument_signature: (tpp_url varchar, zone varchar)
          data_type: variant
  requestCert:
    handler: bin/handlers/requestcert
    timeout: 35
    package:
      include:
        - ./bin/handlers/requestcert
    events:
      - http:
          path: requestcert
          method: post
          authorizer: aws_iam
    snowflake:
      argument_signature: (tpp_url varchar, dns varchar, zone varchar, upn varchar, common_name varchar)
      data_type: variant
  # getCertStatus:
  #   handler: bin/handlers/getcertstatus
  #   package:
  #     include:
  #       - ./bin/handlers/getcertstatus
  #   events:
  #     - http:
  #         path: getcertstatus
  #         method: post
  #         authorizer: aws_iam
  #   snowflake:
  #     argument_signature: (tpp_url varchar, token varchar, request_id varchar)
  #     data_type: variant
  renewCert:
      handler: bin/handlers/renewcert
      package:
        include:
          - ./bin/handlers/renewcert
      events:
        - http:
            path: renewcert
            method: post
            authorizer: aws_iam
      snowflake:
        argument_signature: (tpp_url varchar, request_id varchar)
        data_type: variant
  revokeCert:
    handler: bin/handlers/revokecert
    package:
      include:
        - ./bin/handlers/revokecert
    events:
      - http:
          path: revokecert
          method: post
          authorizer: aws_iam
    snowflake:
      argument_signature: (tpp_url varchar, request_id varchar, should_disable varchar)
      data_type: variant


package:
  include:
  - bin/**


provider:
  name: aws
  runtime: go1.x

# you can overwrite defaults here
#  stage: dev
  region: eu-west-1
